class Solution {
    public int countPrimes(int n) {
        boolean[]flag=new boolean[n+1];
        Arrays.fill(flag,true);
        //intially considring all are pime numbers 
        //sieve of eratosthenes algorithm states go through all the prime numbers and 
        //if the element's sqaure is less than or equal to the n then mark all its factors greater
        //than sqauare as false
        //Time Complexity:O(n*log(log(n)))  
        for(int i=2;i*i<=n;i++){
            if(flag[i]==true){
                for(int j=i*i;j<=n;j+=i){
                    if(flag[j]==true){
                        flag[j]=false;
                    }
                }
            }
        }
        int count=0;
        for(int i=2;i<=n;i++){
            if(flag[i]==true){
                count++;
            }
        }
        return count;
    }
}
