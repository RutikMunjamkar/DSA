public class DisJointSetUnion2 {
    static class DisJointSet{
        public int[]size;
        public int[]parent;
        public DisJointSet(int n){
            size=new int[n];
            parent=new int[n];
            for(int i=0;i<n;i++){
                size[i]=1;
                parent[i]=i;
            }
        }
        public int findUlp(int node){
            if(node==parent[node]){
                return node;
            }
            return parent[node]=findUlp(parent[node]);
        }
        public void unionBySize(int u, int v){
            int ulp_u=findUlp(u);
            int ulp_v=findUlp(v);
            if(size[ulp_u]<size[ulp_v]){
                parent[ulp_u]=ulp_v;
                size[ulp_v]+=size[ulp_u];
            }
            else if(size[ulp_v]<size[ulp_u]){
                parent[ulp_v]=ulp_u;
                size[ulp_u]+=size[ulp_v];
            }
            else{
                parent[ulp_u]=ulp_v;
                size[ulp_v]+=size[ulp_u];
            }
        }
        public static void main(String[] args) {
            DisJointSet dsu=new DisJointSet(7);
            dsu.unionBySize(0,1);
            dsu.unionBySize(1,2);
            dsu.unionBySize(3,4);
            dsu.unionBySize(5,6);
            dsu.unionBySize(4,6);
            if(dsu.findUlp(2)==dsu.findUlp(6)){
                System.out.println("belong to the same");
            }
            else{
                System.out.println("does not belong to the same");
            }
            dsu.unionBySize(2,6);
        }
    }
}
