public class DisJointSetUnion {
    static int[]rank;
    static int[]parent;
    static class DisJointSet{
        public DisJointSet(int n){
            rank=new int[n];parent=new int[n];
            for(int i=0;i<n;i++){
                rank[i]=0;
                parent[i]=i;
            }
        }
        public void unionByRank(int u, int v){
            int ulp_u=findUlp(u);
            int ulp_v=findUlp(v);
            if(rank[ulp_u]<rank[ulp_v]){
                parent[ulp_u]=ulp_v;
            }
            else if(rank[ulp_v]<rank[ulp_u]){
                parent[ulp_v]=ulp_u;
            }
            else{
                parent[ulp_v]=ulp_u;
                rank[ulp_u]++;
            }
        }
        public int findUlp(int node){
            if(node==parent[node]){
                return node;
            }
            return parent[node]=findUlp(parent[node]);
        }
    }
    public static void main(String[] args) {
        DisJointSet dsu=new DisJointSet(7);
        dsu.unionByRank(0,1);
        dsu.unionByRank(1,2);
        dsu.unionByRank(3,4);
        dsu.unionByRank(5,6);
        dsu.unionByRank(4,6);
        dsu.unionByRank(2,6);
        if(dsu.findUlp(2)==dsu.findUlp(6)){
            System.out.println("belong to the same");
        }
        else{
            System.out.println("does not belong to the same");
        }
    }
}
