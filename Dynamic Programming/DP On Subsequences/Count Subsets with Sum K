Perfect Sum Problem
class Solution {
    public int perfectSum(int[] nums, int target) {
        int[][]dp=new int[nums.length+1][target+1];
        for(int i=0;i<nums.length;i++){
            Arrays.fill(dp[i],-1);
        }
        for(int i=nums.length;i>=0;i--){
            for(int j=0;j<=target;j++){
                if(i==nums.length){
                    dp[i][j]=(j==0)?1:0;
                    continue;
                }
                int take=0;
                if(j-nums[i]>=0){
                    take=dp[i+1][j-nums[i]];
                }
                int nottake=dp[i+1][j];
                dp[i][j]=take+nottake;
            }
        }
        return dp[0][target];
    }
    public static int find(int i, int target, int[]nums, int[][]dp){
        if(i==nums.length){
            if(target==0){
                return 1;
            }
            return 0;
        }
        if(dp[i][target]!=-1){
            return dp[i][target];
        }
        int take=0;
        if(target-nums[i]>=0){
            take=find(i+1,target-nums[i],nums,dp);
        }
        int nottake=find(i+1,target,nums,dp);
        dp[i][target]=take+nottake;
        return dp[i][target];
    }
}
